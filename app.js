let tg = window.Telegram.WebApp;
tg.expand();

// üëá –í–°–¢–ê–í–¨ –°–Æ–î–ê —Å–≤–æ–π actual Google Script URL:
const GOOGLE_SCRIPT_URL = "https://script.google.com/macros/s/AKfycbx0E40fC0rCsqa8mNo5TRLt15psJ1S9XB-9QeprHmtO0pmSVHqAFfSjnnvnFPQjPxZKzQ/exec"; // –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® URL

const events = [
  {
    id: 1,
    title: "¬´–ê–±–∞–π¬ª –æ–ø–µ—Ä–∞—Å—ã",
    place: "–°.–°–µ–π—Ñ—É–ª–ª–∏–Ω –∞—Ç—ã–Ω–¥–∞“ì—ã “õ–∞–∑–∞“õ –¥—Ä–∞–º–∞ —Ç–µ–∞—Ç—Ä—ã",
    image: "https://raw.githubusercontent.com/Aibynz/Tiketon/refs/heads/main/image1.jpg"
  },
  {
    id: 2,
    title: "–ï—Ä–ª–∞–Ω –ö”©–∫–µ–µ–≤ –∫–æ–Ω—Ü–µ—Ä—Ç—ñ",
    place: "–û—Ä—Ç–∞–ª—ã“õ –∫–æ–Ω—Ü–µ—Ä—Ç –∑–∞–ª—ã",
    image: "https://raw.githubusercontent.com/Aibynz/Tiketon/refs/heads/main/image2.jpg"
  },
  {
    id: 3,
    title: "¬´“ö—ã–∑ –ñ—ñ–±–µ–∫¬ª —Å–ø–µ–∫—Ç–∞–∫–ª—ñ",
    place: "–ñ–∞—Å—Ç–∞—Ä —Ç–µ–∞—Ç—Ä—ã",
    image: "https://raw.githubusercontent.com/Aibynz/Tiketon/refs/heads/main/image3.jpg"
  }
];

const dateList = (() => {
  const now = new Date();
  const dates = [];
  for (let i = 0; i < 7; i++) {
    const date = new Date(now);
    date.setDate(now.getDate() + i);
    dates.push(date.toISOString().split("T")[0]);
  }
  return dates;
})();

let selectedEvent = null;
let selectedSeats = [];
let selectedDate = "";
let selectedTime = "16:00";
let bookedSeats = []; // –ú–µ—Å—Ç–∞, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∫–∞–∫ –∑–∞–Ω—è—Ç—ã–µ

const eventList = document.getElementById("eventList");
const bookingSection = document.getElementById("bookingSection");
const eventTitle = document.getElementById("eventTitle");
const seatTable = document.querySelector("#seatTable tbody");
const confirmBtn = document.getElementById("confirmBtn");
const dateSelect = document.getElementById("dateSelect");
const timeSelect = document.getElementById("timeSelect");
const customerNameInput = document.getElementById("customerName");
const customerPhoneInput = document.getElementById("customerPhone");


events.forEach(ev => {
  const card = document.createElement("div");
  card.className = "bg-white border border-gray-200 rounded-lg shadow hover:shadow-lg transition";
  card.innerHTML = `
    <div class="p-4">
      <h3 class="text-lg font-bold text-blue-800">${ev.title}</h3>
      <p class="text-sm text-gray-600">${ev.place}</p>
      <img src="${ev.image || 'https://via.placeholder.com/150'}" alt="${ev.title}" class="w-full h-auto object-cover rounded mb-3">
      <button class="mt-3 w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700"
        onclick="selectEvent(${ev.id})">
        –¢–∞“£–¥–∞—É
      </button>
    </div>
  `;
  eventList.appendChild(card);
});

function selectEvent(id) {
  selectedEvent = events.find(e => e.id === id);
  selectedSeats = []; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –º–µ—Å—Ç–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —Å–æ–±—ã—Ç–∏—è
  bookedSeats = []; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–∞–Ω–µ–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∑–∞–Ω—è—Ç—ã–µ –º–µ—Å—Ç–∞
  eventTitle.textContent = selectedEvent.title + " | " + selectedEvent.place;
  bookingSection.classList.remove("hidden");

  dateSelect.innerHTML = "";
  dateList.forEach(date => {
    const option = document.createElement("option");
    option.value = date;
    option.textContent = new Date(date).toLocaleDateString('kk-KZ', { day: 'numeric', month: 'long', year: 'numeric' }); // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
    dateSelect.appendChild(option);
  });
  selectedDate = dateList[0];
  dateSelect.value = selectedDate; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
  selectedTime = timeSelect.options[0].value;
  timeSelect.value = selectedTime;

  fetchBookedSeats();
}

dateSelect.onchange = () => {
  selectedDate = dateSelect.value;
  selectedSeats = []; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –º–µ—Å—Ç–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –¥–∞—Ç—ã
  fetchBookedSeats();
};
timeSelect.onchange = () => {
  selectedTime = timeSelect.value;
  selectedSeats = []; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –º–µ—Å—Ç–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –≤—Ä–µ–º–µ–Ω–∏
  fetchBookedSeats();
};

async function fetchBookedSeats() { // –°–¥–µ–ª–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π
  if (!selectedEvent || !selectedDate || !selectedTime) return;

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  seatTable.innerHTML = '<tr><td colspan="11" class="p-4 text-center">–û—Ä—ã–Ω–¥–∞—Ä –∂“Ø–∫—Ç–µ–ª—É–¥–µ...</td></tr>';

  const url = `${GOOGLE_SCRIPT_URL}?action=getBookedSeats&title=${encodeURIComponent(selectedEvent.title)}&date=${selectedDate}&time=${selectedTime}`;
  try {
    const response = await fetch(url);
    if (!response.ok) {
        const errorData = await response.json().catch(() => ({error: "Fetch error, could not parse JSON"}));
        console.error("–°–µ—Ä–≤–µ—Ä “õ–∞—Ç–µ—Å—ñ (Google Script):", response.status, errorData);
        alert(`–û—Ä—ã–Ω–¥–∞—Ä —Ç—É—Ä–∞–ª—ã –∞“õ–ø–∞—Ä–∞—Ç –∞–ª—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ: ${errorData.error || response.statusText}. –ö–µ–π—ñ–Ω—ñ—Ä–µ–∫ “õ–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.`);
        bookedSeats = []; // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –Ω–µ—Ç –∑–∞–Ω—è—Ç—ã—Ö –º–µ—Å—Ç, –∏–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ-–¥—Ä—É–≥–æ–º—É
    } else {
        const data = await response.json();
        bookedSeats = data.booked || [];
    }
  } catch (err) {
    console.error("–û—Ä—ã–Ω–¥–∞—Ä–¥—ã –∞–ª—É –∫–µ–∑—ñ–Ω–¥–µ –∂–µ–ª—ñ “õ–∞—Ç–µ—Å—ñ:", err);
    alert("–û—Ä—ã–Ω–¥–∞—Ä–¥—ã –∞–ª—É –∫–µ–∑—ñ–Ω–¥–µ –∂–µ–ª—ñ “õ–∞—Ç–µ—Å—ñ. –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –±–∞–π–ª–∞–Ω—ã—Å—ã“£—ã–∑–¥—ã —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑.");
    bookedSeats = [];
  }
  drawSeatMap();
}


function drawSeatMap() {
  seatTable.innerHTML = ""; // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –∫–∞—Ä—Ç—É
  for (let row = 1; row <= 10; row++) {
    const tr = document.createElement("tr");
    const rowLabel = document.createElement("td");
    rowLabel.textContent = `${row}-“õ–∞—Ç–∞—Ä`;
    rowLabel.className = "p-1 font-medium bg-gray-100 text-xs sm:text-sm"; // –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
    tr.appendChild(rowLabel);

    for (let col = 1; col <= 10; col++) {
      const seatId = `${row}-“õ–∞—Ç–∞—Ä ${col}-–æ—Ä—ã–Ω`;
      const td = document.createElement("td");
      td.textContent = col;
      td.dataset.seatId = seatId; // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –º–µ—Å—Ç–∞ –≤ data-–∞—Ç—Ä–∏–±—É—Ç–µ

      let baseClasses = "p-2 border text-xs sm:text-sm text-center "; // –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞

      if (bookedSeats.includes(seatId)) {
        td.className = baseClasses + "bg-red-300 text-gray-600 cursor-not-allowed";
        td.title = "–ë“±–ª –æ—Ä—ã–Ω –±–æ—Å –µ–º–µ—Å";
      } else {
        td.className = baseClasses + "cursor-pointer bg-gray-50 hover:bg-green-300";
        td.onclick = () => toggleSeat(td, seatId);
        if (selectedSeats.includes(seatId)) {
          td.classList.remove("bg-gray-50", "hover:bg-green-300");
          td.classList.add("bg-green-500", "text-white");
        }
      }
      tr.appendChild(td);
    }
    seatTable.appendChild(tr);
  }
}

function toggleSeat(td, seatId) {
  const index = selectedSeats.indexOf(seatId);
  if (index > -1) { // –ï—Å–ª–∏ –º–µ—Å—Ç–æ —É–∂–µ –≤—ã–±—Ä–∞–Ω–æ, –æ—Ç–º–µ–Ω—è–µ–º –≤—ã–±–æ—Ä
    selectedSeats.splice(index, 1);
    td.classList.remove("bg-green-500", "text-white");
    td.classList.add("bg-gray-50", "hover:bg-green-300");
  } else { // –ï—Å–ª–∏ –º–µ—Å—Ç–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ, –≤—ã–±–∏—Ä–∞–µ–º
    selectedSeats.push(seatId);
    td.classList.remove("bg-gray-50", "hover:bg-green-300");
    td.classList.add("bg-green-500", "text-white");
  }
}

confirmBtn.onclick = async () => {
  const customerName = customerNameInput.value.trim();
  const customerPhone = customerPhoneInput.value.trim();

  if (!selectedEvent) {
    alert("–ê–ª–¥—ã–º–µ–Ω —ñ—Å-—à–∞—Ä–∞–Ω—ã —Ç–∞“£–¥–∞“£—ã–∑.");
    return;
  }
  if (selectedSeats.length === 0) {
    alert("–ö–µ–º—ñ–Ω–¥–µ –±—ñ—Ä –æ—Ä—ã–Ω–¥—ã —Ç–∞“£–¥–∞“£—ã–∑.");
    return;
  }
  if (!customerName) {
    alert("–ê—Ç—ã-–∂”©–Ω—ñ“£—ñ–∑–¥—ñ –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑.");
    customerNameInput.focus();
    return;
  }
  if (!customerPhone) { // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é –Ω–æ–º–µ—Ä–∞
    alert("–¢–µ–ª–µ—Ñ–æ–Ω –Ω”©–º—ñ—Ä—ñ“£—ñ–∑–¥—ñ –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑.");
    customerPhoneInput.focus();
    return;
  }

  confirmBtn.disabled = true;
  confirmBtn.textContent = "–¢–µ–∫—Å–µ—Ä—É...";

  try {
    // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω—è—Ç—ã—Ö –º–µ—Å—Ç –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
    const checkUrl = `${GOOGLE_SCRIPT_URL}?action=getBookedSeats&title=${encodeURIComponent(selectedEvent.title)}&date=${selectedDate}&time=${selectedTime}`;
    const response = await fetch(checkUrl);
    if (!response.ok) throw new Error(`–°–µ—Ä–≤–µ—Ä “õ–∞—Ç–µ—Å—ñ: ${response.status}`);
    const data = await response.json();
    const currentBookedSeats = data.booked || [];

    const newlyBookedByOthers = selectedSeats.filter(seat => currentBookedSeats.includes(seat));

    if (newlyBookedByOthers.length > 0) {
      alert(`–ö–µ—à—ñ—Ä—ñ“£—ñ–∑, —Å—ñ–∑ —Ç–∞“£–¥–∞—É –∂–∞—Å–∞–ø –∂–∞—Ç“õ–∞–Ω–¥–∞ –∫–µ–ª–µ—Å—ñ –æ—Ä—ã–Ω–¥–∞—Ä –±—Ä–æ–Ω–¥–∞–ª—ã–ø –∫–µ—Ç—Ç—ñ: ${newlyBookedByOthers.join(', ')}. \n–ë–µ—Ç –∂–∞“£–∞—Ä—Ç—ã–ª–∞–¥—ã, –±–∞—Å“õ–∞ –æ—Ä—ã–Ω–¥–∞—Ä–¥—ã —Ç–∞“£–¥–∞“£—ã–∑.`);
      bookedSeats = currentBookedSeats; // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∑–∞–Ω—è—Ç—ã—Ö –º–µ—Å—Ç
      selectedSeats = selectedSeats.filter(seat => !newlyBookedByOthers.includes(seat)); // –£–±–∏—Ä–∞–µ–º –∑–∞–Ω—è—Ç—ã–µ –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö
      drawSeatMap(); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∫–∞—Ä—Ç—É
      confirmBtn.disabled = false;
      confirmBtn.textContent = "üì© –ë—Ä–æ–Ω–¥–∞—É";
      return;
    }

    // –ï—Å–ª–∏ –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Telegram
    const dataToSend = {
      event: { // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–±—ã—Ç–∏–∏
          id: selectedEvent.id,
          title: selectedEvent.title,
          place: selectedEvent.place,
          image: selectedEvent.image
      },
      seats: selectedSeats,
      date: selectedDate,
      time: selectedTime,
      customerName: customerName,
      customerPhone: customerPhone
    };
    tg.sendData(JSON.stringify(dataToSend));
    // –ö–Ω–æ–ø–∫–∞ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π, —Ç.–∫. –æ–∂–∏–¥–∞–µ—Ç—Å—è –∑–∞–∫—Ä—ã—Ç–∏–µ WebApp –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ –æ–ø–ª–∞—Ç–µ

  } catch (err) {
    console.error("–ë—Ä–æ–Ω–¥–∞—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ:", err);
    alert("–ë—Ä–æ–Ω–¥–∞—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã. –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –±–∞–π–ª–∞–Ω—ã—Å—ã“£—ã–∑–¥—ã —Ç–µ–∫—Å–µ—Ä—ñ–ø, “õ–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.");
    confirmBtn.disabled = false;
    confirmBtn.textContent = "üì© –ë—Ä–æ–Ω–¥–∞—É";
  }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
// if (events.length > 0) {
//   selectEvent(events[0].id);
// }
